apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.cert-manager.io
spec:
  podInfoOnMount: true
  volumeLifecycleModes:
  - Ephemeral
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: simple-csi
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: simple-csi
rules:
- apiGroups: ["cert-manager.io"]
  resources: ["certificaterequests"]
  verbs: ["get", "list", "watch", "create", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: simple-csi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: simple-csi
subjects:
- apiGroup:
  kind: ServiceAccount
  name: simple-csi
  namespace: cert-manager
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: simple-csi
  namespace: cert-manager
spec:
  selector:
    matchLabels:
      app: simple-csi
  template:
    metadata:
      labels:
        app: simple-csi
    spec:
      serviceAccount: simple-csi

      containers:
        - name: node-driver-registrar
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: false
            capabilities: { drop: [ "ALL" ] }
            readOnlyRootFilesystem: true
          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.14.0
          args:
            - --v=5
            - --csi-address=/plugin/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/simple-csi/csi.sock
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /plugin
            - name: registration-dir
              mountPath: /registration

        - name: simple-csi
          securityContext:
            runAsUser: 0
            privileged: true
            capabilities: { drop: [ "ALL" ] }
            readOnlyRootFilesystem: true
          image: simple-csi:latest
          imagePullPolicy: "Never"
          args :
            - --node-id=$(NODE_ID)
            - --endpoint=$(CSI_ENDPOINT)
            - --data-root=csi-data-dir
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://plugin/csi.sock
          ports:
            - containerPort: 9402
              name: http-metrics
              protocol: TCP
          volumeMounts:
            - name: plugin-dir
              mountPath: /plugin
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - name: csi-data-dir
              mountPath: /csi-data-dir
              mountPropagation: "Bidirectional"
      volumes:
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/simple-csi
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
        - name: csi-data-dir
          hostPath:
            path: /tmp/simple-csi
            type: DirectoryOrCreate
